\name{gapfillerWrap}
\alias{gapfillerWrap}
\title{A function to prepare files and to run gapfiller}
\description{A function that uses GapFiller to confirm by de novo assembly the presence of the fusion break point. The function needs as input a list of fusion transcript generated by chimeraSeqSet function and the bam file containing the reads remapped over the fusion transcripts made using Rsubread.}
\usage{gapfillerWrap(chimeraSeqSet.out, bam, parallel=c(FALSE,TRUE))
}
\arguments{
  \item{chimeraSeqSet.out}{a list of DNAStringSet output from chimeraSeqSet}
  \item{bam}{bam file containing the reads remapped over the fusion transcripts using Rsubread}
  \item{parallel}{if FALSE FALSE no parallelization, if TRUE TRUE full paralleization, if FALSE TRUE only parallelization for internal funtions}
  
}
\value{
    The program will write in a temporary directory contigs.fasta and contig.stats, which are used to evaluate if the de novo  assembly allows the identification of the fusion break point. 
The function returns for each fusion a list of three objects. The list is returned only in case that some of de novo assemblies cover the breakpoint junction. 
The list is made of: 
\item{contigs}{which is a PairwiseAlignments object} 
\item{junction.contigs}{which is a DNAStringSet encompassing the sequences present in the contigs object} 
\item{fusion}{which is a DNAStringSet object encompassing the fusion transcript}

}
\author{Raffaele A Calogero}
\examples{
#tmp <- importFusionData("star", "Chimeric.out.junction", org="hs", parallel=T, hist.file=NULL, min.support=100)
#myset <- tmp[1:4]
#tmp.seq <- chimeraSeqsSet(myset, type="transcripts")
#tmp <- gapfillerWrap(chimeraSeqSet.out=trsx, bam="accepted_hits_mapped.bam", parallel=c(FALSE,TRUE))
}

\seealso{ \code{\link{chimeraSeqs}}, \code{\link{gapfillerInstallation}}, \code{\link{gapfillerRun}}}
\keyword{utilities}


